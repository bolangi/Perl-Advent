Author: Joel Roth <joelz@pobox.com>
Title: Trimming audio files with Audio::Nama
Topic: Audio::Nama

=encoding utf8

=head2 Our task

We want to remove undesired parts of an audio file,
such as various info breaks during a radio play. Stated
differently, we want to extract relevant parts of an audio
file, and stitch them together into a new file. 

=head2 Our hammer

To do this, we install L<Ecasound|https://ecasound.seul.org/ecasound/>, a general-purpose audio
engine and L<Audio::Nama>, which configures Ecasound to perform
the recording, playback or other tasks at hand. 

We also need git, which nama uses to manage project state,
provide for branching, undo, etc.

The first run of C<nama> creates a C<$HOME/nama> directory for 
project files and a configuration file C<$HOME/.namarc>. 

Nama defaults to linux conventions: that you'll be recording
or listening from the default ALSA soundcard device which is
usually card 0, your computer's built-in soundcard. You can
change this setting in C<.namarc>.  You can list your
soundcards by C<cat /proc/asound/cards> and their devices by
C<aplay -l>.  Also make sure your sample rate setting is
correct.  Nama defaults to 44.1 kHz.  

=head2 Create a new project, add a track and import

We'll create a new project called 'christmas'.

C<$ nama -c christmas>

We get a startup banner, then this empty track listing:
 
	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  MON     Main bus              CH 1/2        100    50
	  2  Mixdown               OFF     track Main            --             --    --

	nama christmas Mixdown >

In the prompt, 'christmas' is the project, 'Mixdown', the current track. 

We create a separate track to accommodate our audio file:

	nama christmas Mixdown > add carol

	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  MON     Main bus              CH 1/2        100    50
	  2  Mixdown               OFF     track Main            --             --    --
	  3  carol                 MON     CH 1                  Main bus      100    50

Now import our audio source:

	nama christmas carol > import ~/music/christmas-carol.mp3

	format: s16_le,2,12000
	importing /home/jroth/music/christmas-carol.mp3 as /home/jroth/nama/christmas/.wav/carol_1.wav, converting to s16_le,2,44100,i

	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  MON     Main bus              CH 1/2        100    50
	  2  Mixdown               OFF     track Main            --             --    --
	  3  carol                 PLAY    carol_1.wav           Main bus      100    50

We can now press SPACE to start/stop playback. 

=head2 Audio network basics: the chain setup file

Nama configures the audio network by generating a
definition file--called a chain setup--for the Ecasound
audio engine.

A chain setup is a graph composed of chains and loop
devices.  Each chain must have one input and one output.
which could be an audio device, a RIFF (.wav) file, or a
loop device.  Chains are edges in the graph, each streaming
an audio signal. Chains can host plugins and plugin
controllers called I<chain operators> that are included in
Ecasound and provided by numerous
L<LADSPA|https://ladspa.org> and
L<LV2|https://wiki.linuxaudio.org/apps/categories/lv2_plugins>
authors. A chain reflects state of its corresponding
track. The chain number in a chain setup generated by Nama
almost always matches the track number.

Here is a simple chain setup, omitting general options:

	# audio inputs

	-a:3 -f:s16_le,2,44100 -i:/home/jroth/nama/christmas/.wav/carol_1.wav

	# audio outputs

	-a:3 -o:alsa,default

There is one chain, with label C<3>. Its input is from a .wav
file, and its output goes to the default soundcard. There is
an C<-f> argument that describes the audio signal bit width,
channel count and sample frequency. (We configure
this from within Nama, so you never have to edit a chain setup
by hand.)

For more complicated graphs, we can add a loop device, which
is a buffer stage that serves as a vertex for joining two or more chains.

With nama configured as per the track listing above
here is the chain setup for listening to our radio play. 

	# audio inputs

	-a:1 -f:s16_le,16,44100,i -i:loop,Main_in
	-a:3 -f:s16_le,2,44100 -i:/home/jroth/nama/christmas/.wav/carol_1.wav

	# audio outputs

	-a:1 -o:alsa,default
	-a:3 -f:s16_le,16,44100,i -o:loop,Main_in

We have two chains joined through a loop device.
(For some reason the loop device is configured for 16
channels and that propagates to the soundcard.
But if we hit SPACE, we hear the audio plays correctly.)

"Why bother to have the intermediate loop device here?" I
hear you ask. I'll tell you: It's a mixer.  Each user track
belongs to a bus called 'Main' and all their outputs sum
into the Main track, which provides a single master fader.
In other words, a bus is software mixer: multiple signals
in, one signal out. A bus is implemented by many tracks
(represented by chains) summing their signals into one
output track via a loop device.

Soon we'll use a specialized type of bus called a 'sequence'
to connect end-to-end the multiple clips from our radio
play. 

It starts with a single clip. Let's define a clip running
from 10 to 20 seconds in the parent file.

	nama christmas carol > set-region 10.0 20.0
	nama christmas carol > show-track

	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  3  carol                 PLAY    carol_1.wav           Main bus      100    50
	Length: 10.000 / 0:10
	Region start: 10.000 / 0:10 (10.0)
	Region end: 20.000 / 0:20 (20.0)

The region definition adds a term to the chainsetup: 

	-a:3 -f:s16_le,2,44100 -i:select,10,10,/home/jroth/nama/christmas/.wav/carol_1.wav

We can play the clip at an arbitrary time with the 'shift'
command:

	nama christmas carol > shift 30.0

That leads to a 'playat' term in the input definition.

	-a:3 -f:s16_le,2,44100 -i:playat,30.0,select,10,10,/home/jroth/nama/christmas/.wav/carol_1.wav

Of course, we can remove the region definition.

	nama christmas carol > remove-region
	carol: Region definition removed.  Full track will play.

Now, to accomplish our goal, we need to mark the beginning
and end of each clip we want to keep, then put the clips in
sequence.  

We can do that by listening to the track and using the
C<toggle-clip> command (bound to the F1 key) to alternately
drop clip-start and clip-end marks. 

After some trial and error, we have the correct marks
for this contrived example (five-minute sections of content
separated by 40-second breaks.)

	nama christmas carol > list-marks
	0 40.0 clip-start-0020
	1 340.0 clip-end-0021
	2 380.0 clip-start-0022
	3 680.0 clip-end-0023
	4 720.0 clip-start-0024
	5 1020.0 clip-end-0025
	6 1060.0 clip-start-0026
	*7 1360.0 clip-end-0027


=head2 The final gathering

We can now assemble our clips into one sequence:

	nama christmas carol > gather

	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  MON     Main bus              CH 1/2        100    50
	  2  Mixdown               OFF     track Main            --             --    --
	  3  carol                 MON     carol sequence        Main bus      100    50

The source for track 3 has changed from 'carol_1.wav' to
'carol sequence'.
 
If we show all tracks, we see our clips (truncated names) each presented as a track.

	nama christmas carol > sha # show all tracks

	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  MON     Main bus              CH 1/2        100    50
	  2  Mixdown               OFF     track Main            --             --    --
	  3  carol                 MON     carol sequence        Main bus      100    50
	  4  carol-1-carol-v       PLAY    carol_1.wav           carol sequen  100    50
	  5  carol-2-carol-v       PLAY    carol_1.wav           carol sequen  100    50
	  6  carol-3-carol-v       PLAY    carol_1.wav           carol sequen  100    50
	  7  carol-4-carol-v       PLAY    carol_1.wav           carol sequen  100    50

In the chain setup we see that the source for each chain is
a clip, and these are positioned sequentially in time:

	nama christmas carol > chains

	# audio inputs

	-a:1 -f:s16_le,16,44100,i -i:loop,Main_in
	-a:3 -f:s16_le,16,44100,i -i:loop,carol_in
	-a:4 -f:s16_le,2,44100 -i:select,40,300,/home/jroth/nama/christmas/.wav/carol_1.wav
	-a:5 -f:s16_le,2,44100 -i:playat,300,select,380,300,/home/jroth/nama/christmas/.wav/carol_1.wav
	-a:6 -f:s16_le,2,44100 -i:playat,600,select,720,300,/home/jroth/nama/christmas/.wav/carol_1.wav
	-a:7 -f:s16_le,2,44100 -i:playat,900,select,1060,300,/home/jroth/nama/christmas/.wav/carol_1.wav

	# audio outputs

	-a:1 -o:alsa,default
	-a:3 -f:s16_le,16,44100,i -o:loop,Main_in
	-a:4,5,6,7 -f:s16_le,16,44100,i -o:loop,carol_in

We can listen through to make sure it sounds right, using
SPACE for play/stop. We have commands like C<fw 5:00>,
C<rw 30> and various hotkeys to navigate through the file.

Assuming we resolved any hiccups, we are now ready to render the project:

	nama christmas carol > mixdown
	Enabling mixdown to file

	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  MON     Main bus              Mixdown       100    50
	  2  Mixdown               REC v1  Main                  --             --    --
	  3  carol                 MON     carol sequence        Main bus      100    50

	Now at: 0:00
	Engine is ready.

	Press the SPACE key to start the mixdown.

	Engine is running
	Engine is finished at 16:27

	nama christmas carol > recorded: Mixdown_1.wav
	Setting mixdown playback mode.

	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  OFF     Main bus              --            100    50
	  2  Mixdown               PLAY    Mixdown_1.wav         --             --    --
	  3  carol            MON  OFF     carol sequence        --            100    50

If configured, the mixdown step also generates ogg and mp3
encodings with oggenc and lame, respectively. These files
appear with the project name in the project directory:
C<~/nama/christmas/christmas_1.mp3>
C<~/nama/christmas/christmas_1.ogg> 
C<~/nama/christmas/christmas_1.wav> is a symlink
to C<~/nama/christmas/.wav/Mixdown_1.wav>

We can hit SPACE to play our mixdown, or to go back to our
previous configuration:

	nama christmas carol > mixoff
	Leaving mixdown mode.
	 
	 No. Name       Requested  Status  Source                Destination   Vol   Pan
	===============================================================================
	  1  Main                  MON     Main bus              CH 1/2        100    50
	  2  Mixdown               OFF     track Main            --             --    --
	  3  carol                 MON     carol sequence        Main bus      100    50

There are many other things you can do with Nama but that's all for today!

=head2 Showcase

Jeanette Claassen has produced a large number of
L<original|https://www.youtube.com/@jeanette_c3896/videos>
L<songs|https://juliencoder.de/nama> using Nama in
combination with various other music software and hardware.
She began recording music using Ecasound and migrated to
Nama as it became sufficiently featureful.
